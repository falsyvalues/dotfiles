[alias]
	# Well described below
	l = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	#                              │                    │         │          │                  └─ author name
	#                              │                    │         │          └─ committer date (relative)
	#                              │                    │         └─ subject (commit message)
	#                              │                    └─ ref names (like the --decorate option)
	#                              └─ hash (abbreviated SHA)

	# Add graph log version used above, and tries to add all the refs
	lol = l --graph --all

	# Stash changes and fetch
	sf = stash && fetch

	# View the current status using the short format and add actual branch name
	s = status -sb

	# More verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# List configuration with the origin of a config value
	configuration = config --list --show-origin

	# List contributors and sort according to the number of commits
	contributors = shortlog -sn

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
	ui = auto

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[include]
	# Include separate file for username / github token / etc
	path = ~/.gitconfig.local

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
	# When set to only, only such fast-forward merges are allowed (equivalent to giving the --ff-only option from the command line)
	ff = only

[push]
	# Check git help config and search for `push.default`
	# `matching` vs `simple`
	default = simple

	# Make `git push` push relevant annotated tags when pushing branches out.
	# I don't like to do that
	followTags = false

[user]
	# The "user.useConfigOnly" configuration variable can be used to
	# force the user to always set user.email & user.name configuration
	# variables, serving as a reminder for those who work on multiple
	# projects and do not want to put these in their $HOME/.gitconfig.
	#
	# https://github.com/git/git/blob/master/Documentation/RelNotes/2.8.0.txt
	useConfigOnly = true